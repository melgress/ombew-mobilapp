{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Desktop\\\\React-Fitness-Mobil\\\\FitnessAppMobil\\\\screens\\\\Login.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { styles, buttons } from \"./styles\";\n\nvar Login = function (_Component) {\n  _inherits(Login, _Component);\n\n  var _super = _createSuper(Login);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _super.call(this, props);\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!this.props.route.params.en) {\n        return React.createElement(View, {\n          style: styles.layout,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 9\n          }\n        }, React.createElement(TextInput, {\n          style: styles.textInput2,\n          onChangeText: function onChangeText(text) {\n            return _this2.props.route.params.onChangeUsername(text);\n          },\n          placeholder: \"Benutzername\",\n          value: this.state.username,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 11\n          }\n        }), React.createElement(TextInput, {\n          style: styles.textInput2,\n          secureTextEntry: true,\n          onChangeText: function onChangeText(text) {\n            return _this2.props.route.params.onChangePassword(text);\n          },\n          placeholder: \"Passwort\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 11\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: buttons.button1,\n          onPress: function onPress() {\n            _this2.props.route.params.handleLogin();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          style: buttons.buttontext,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }\n        }, \"Login\")));\n      } else {\n        return React.createElement(View, {\n          style: styles.layout,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 9\n          }\n        }, React.createElement(TextInput, {\n          style: styles.textInput2,\n          onChangeText: function onChangeText(text) {\n            return _this2.props.route.params.onChangeUsername(text);\n          },\n          placeholder: \"Username\",\n          value: this.state.username,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }\n        }), React.createElement(TextInput, {\n          style: styles.textInput2,\n          secureTextEntry: true,\n          onChangeText: function onChangeText(text) {\n            return _this2.props.route.params.onChangePassword(text);\n          },\n          placeholder: \"Password\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: buttons.button1,\n          onPress: function onPress() {\n            _this2.props.route.params.handleLogin();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          style: buttons.buttontext,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }\n        }, \"Login\")));\n      }\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport { Login as default };","map":{"version":3,"sources":["C:/Desktop/React-Fitness-Mobil/FitnessAppMobil/screens/Login.js"],"names":["React","Component","styles","buttons","Login","props","state","route","params","en","layout","textInput2","text","onChangeUsername","username","onChangePassword","button1","handleLogin","buttontext"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { View, TextInput, TouchableOpacity, Text } from \"react-native\";\r\nimport { styles, buttons } from './styles';\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    if (!this.props.route.params.en) {\r\n      return (\r\n        <View style={styles.layout}>\r\n          <TextInput style={styles.textInput2}\r\n            //style={styles.inputForm}\r\n            onChangeText={(text) =>\r\n              this.props.route.params.onChangeUsername(text)\r\n            }\r\n            placeholder=\"Benutzername\"\r\n            value={this.state.username}\r\n          />\r\n          <TextInput style={styles.textInput2}\r\n            //style={styles.inputForm}\r\n            secureTextEntry={true}\r\n            onChangeText={(text) =>\r\n              this.props.route.params.onChangePassword(text)\r\n            }\r\n            placeholder=\"Passwort\"\r\n          />\r\n          <TouchableOpacity style={buttons.button1}\r\n            onPress={() => {\r\n              this.props.route.params.handleLogin();\r\n              //this.props.navigation.navigate(\"Home\");\r\n            }}\r\n          >\r\n            <Text style={buttons.buttontext}>Login</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    } else {\r\n      return (\r\n        <View style={styles.layout}>\r\n          <TextInput style={styles.textInput2}\r\n            //style={styles.inputForm}\r\n            onChangeText={(text) =>\r\n              this.props.route.params.onChangeUsername(text)\r\n            }\r\n            placeholder=\"Username\"\r\n            value={this.state.username}\r\n          />\r\n          <TextInput style={styles.textInput2}\r\n            //style={styles.inputForm}\r\n            secureTextEntry={true}\r\n            onChangeText={(text) =>\r\n              this.props.route.params.onChangePassword(text)\r\n            }\r\n            placeholder=\"Password\"\r\n          />\r\n          <TouchableOpacity style={buttons.button1}\r\n            onPress={() => {\r\n              this.props.route.params.handleLogin();\r\n              //this.props.navigation.navigate(\"Home\");\r\n            }}\r\n          >\r\n            <Text style={buttons.buttontext}>Login</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}