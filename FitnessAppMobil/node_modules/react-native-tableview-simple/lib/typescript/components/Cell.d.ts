import React from 'react';
import { StyleProp, ViewStyle, TextProps, TextStyle } from 'react-native';
export interface CellInterface {
    accessory?: false | 'DisclosureIndicator' | 'Detail' | 'DetailDisclosure' | 'Checkmark';
    accessoryColor?: ViewStyle['borderColor'] | TextStyle['color'];
    accessoryColorDisclosureIndicator?: ViewStyle['borderColor'];
    allowFontScaling?: boolean;
    backgroundColor?: ViewStyle['backgroundColor'];
    cellStyle?: 'Basic' | 'RightDetail' | 'LeftDetail' | 'Subtitle';
    cellAccessoryView?: React.ReactNode;
    cellContentView?: React.ReactNode;
    cellImageView?: React.ReactNode;
    contentContainerStyle?: StyleProp<ViewStyle>;
    detail?: string | number;
    detailTextStyle?: StyleProp<TextStyle>;
    detailTextProps?: TextProps;
    disableImageResize?: boolean;
    hideSeparator?: boolean;
    highlightActiveOpacity?: number;
    highlightUnderlayColor?: ViewStyle['backgroundColor'];
    image?: React.ReactElement;
    isDisabled?: boolean;
    onPress?: () => void | false;
    onPressDetailAccessory?: () => void | false;
    onUnHighlightRow?(): void;
    onHighlightRow?(): void;
    leftDetailColor?: TextStyle['color'];
    rightDetailColor?: TextStyle['color'];
    subtitleColor?: TextStyle['color'];
    subtitleTextStyle?: StyleProp<TextStyle>;
    testID?: string;
    title?: React.ReactNode;
    titleTextProps?: TextProps;
    titleTextStyle?: StyleProp<TextStyle>;
    titleTextStyleDisabled?: StyleProp<TextStyle>;
    titleTextColor?: TextStyle['color'];
    withSafeAreaView?: boolean;
}
declare const Cell: React.FC<CellInterface>;
export default Cell;
